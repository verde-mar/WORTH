private Vector<Card> cardsToShow;
    private Iterator shows;
    private boolean concat;
 public Vector<Card> showCards(){
        cardsToShow = new Vector<>();
        concat = cardsToShow.addAll(toDo); //da testare questo concatenamento, ha successo?
        concat = cardsToShow.addAll(toBeRevised); //->per cose dal genere c'e' bisogno di usare synchronized per la lock giusto?
        concat = cardsToShow.addAll(inProgress);
        concat = cardsToShow.addAll(done);
        /*shows = to Do.iterator();
        while(shows.hasNext()){
            Card card = (Card) shows.next();
            cardsToShow.add(card);
        }

        shows = inProgress.iterator();
        while(shows.hasNext()){
            Card card = (Card) shows.next();
            cardsToShow.add(card);
        }

        shows = toBeRevised.iterator();
        while(shows.hasNext()){
            Card card = (Card) shows.next();
            cardsToShow.add(card);
        }

        shows = done.iterator();
        while(shows.hasNext()){
            Card card = (Card) shows.next();
            cardsToShow.add(card);
        }
*/
        return cardsToShow;
    }

    public Card showCard(String cardName){
        concat = cardsToShow.addAll(toDo); //da testare questo concatenamento, ha successo?
        concat = cardsToShow.addAll(toBeRevised);
        concat = cardsToShow.addAll(inProgress);
        concat = cardsToShow.addAll(done);
        for (Card value : cardsToShow) {
            if (value.getName().equals(cardName)){
                return value;
            }
        } /*
        shows = to Do.iterator();
        while(shows.hasNext()){
            Card card = (Card) shows.next();
            if(card.getName().equals(cardName))
                return card;        }

        shows = inProgress.iterator();
        while(shows.hasNext()){
            Card card = (Card) shows.next();
            if(card.getName().equals(cardName))
                return card;        }

        shows = toBeRevised.iterator();
        while(shows.hasNext()){
            Card card = (Card) shows.next();
            if(card.getName().equals(cardName))
                return card;        }

        shows = done.iterator();
        while(shows.hasNext()){
            Card card = (Card) shows.next();
            if(card.getName().equals(cardName))
                return card;
        }
    */
        return null;
    }

    public String getCardHistory(String cardname){
        Card card = showCard(cardname);
        if(card!=null) {
            String history = card.getHistory();
            return history;
        }
        return null;
    }